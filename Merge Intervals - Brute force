class Solution {
public:
    vector<vector<int>> merge(vector<vector<int>>& intervals) {
        vector<vector<int>> result;
        map<int,int> mp;
        sort(intervals.begin(), intervals.end());
        for(int i=0;i<intervals.size();i++){
            int start = intervals[i][0];
            int end = intervals[i][1];
            bool aa = true;
            if(i==0){
                mp.insert({start,end});
            }
            else{
                for(auto it: mp){           
                    if(it.second >= start){
                        if(it.first > start){
                            int er = it.first;
                            int eraa = it.second;
                            mp.erase(er);
                            if(eraa > end){
                                mp.insert({start,eraa});
                            } 
                            else{
                                mp.insert({start,end});
                            }
                            continue;
                        }
                        aa = false;
                        if(it.second > end){
                            mp[it.first] = it.second;
                        }
                        else{
                            mp[it.first]=end;
                        }
                    }
                }
                if(aa==true){
                    mp.insert({start,end});
                }
            }
        }      
        for(auto it:mp){
            vector<int> abc = {it.first,it.second};
            result.push_back(abc);
        }
        return result;
    }
};
