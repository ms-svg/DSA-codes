void mergeSort(vector<int> &arr,int low,int high){
     if(low==high){
	      return;
     }	 
	 int mid = (low+high) / 2;
	 mergeSort(arr,low,mid);
	 mergeSort(arr,mid+1,high);
	 merge(arr,low,mid,high);
}

void merge(vector<int> &arr,int low,int mid,int high){
     vector<int> temp;
	 int left=low;
	 int right = mid+1;
	 while(left<=mid && right<=mid){
	     if(arr[left]<=arr[right]){
		     temp.push_back(arr[left]);
			 left++;
	     }
		 else{
		     temp.push_back(arr[right]);
			 right++;
		 }
	 }
	 while(left<=mid){
	     temp.push_back(arr[i]);
		 left++;
     }
	 while(right<=high){
	     temp.push_back(arr[i]);
		 right++;
     }	 
	 for(int i=low;i<=high;i++){
	     arr[i]=temp[i-low];
	 }
}

void ms(vector<int> &arr,int n){
     mergeSort(arr,0,n-1);
}
	 
