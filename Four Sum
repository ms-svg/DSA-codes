class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        
        vector<vector<int>> result;
        sort(nums.begin(),nums.end());
        
     if(nums.size() > 0){
            if(!(target < 0 && nums[0]<0) ){
            if(nums[0] > target || nums.size()==0){
            return result;
        }
        }
     }
    else{
        return result;
    }
        
        for(int i=0;i<nums.size();i++){
            if(i==0 || (i>0 && nums[i]!=nums[i-1])){
                for(int j=i+1;j<nums.size();j++){
                //    int astra = 0;
                    if(j==i+1 || (j>0 && nums[j]!=nums[j-1]) ){
                        int start = j+1;
                        int end = nums.size()-1;
                        int astra = 0;
                        while(start<end){
                            //cout<<"Hey "<<nums[i]<<" "<<nums[j]<<" "<<nums[start]<<" "<<nums[end]<<endl;
                           long long adds = (long long) nums[start] + nums[end] + nums[i] + nums[j];
                            if( adds == target){
                                // Action krdo.
                                vector<int> res = {nums[i],nums[j],nums[start],nums[end]};
                                result.push_back(res);
                                start++;
                                end--;
                            }
                            else if(adds  > target){
                                end--;
                                astra = 1;
                            }
                            else{
                                start++;
                                astra = 2;
                            }
                            
                            if(astra!=1){
                                while(start<end  && start > 0 &&  nums[start] == nums[start-1]){
                                start++;
                            }
                            }
                            
                            if(astra!=2){
                                while(start<end && end < nums.size()-1 && nums[end]==nums[end+1]){
                                end--;
                            }
                            }
                        }
                        
                    }
                }
            }
        }
        return result;
    }
};
