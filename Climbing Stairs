Climbing stairs :-
-----------------------------------------------------------------------------------
1. Recursion Code.

int countofWays(int n){
        
        if(n==0){
            return 1;
        }
        if(n<0){
            return 0;
        }
        return countofWays(n-1) + countofWays(n-2);
    }
    
    int climbStairs(int n) {
        
        return countofWays(n);
    }

------------------------------------------------------------------------------------

2. Memoization

class Solution {
public:
    
    
    int countofWays(int n,vector<int>& dp){
        
        if(dp[n]!=-1){
            return dp[n];
        }
        if(n==0){
            return 1;
        }
        if(n<0){
            return 0;
        }
        
         if(dp[n]!=-1){
            return dp[n];
        }
        
        return dp[n] = countofWays(n-1,dp) + countofWays(n-2,dp);
    }
    
    int climbStairs(int n) {
        
        vector<int> dp(n+1,-1);
        dp[0]=1;
        dp[1]=1;
        return countofWays(n,dp);
    }
};



----------------------------------------------------------------------------------

3. Tabulation

int climbStairs(int n) {
        
        vector<int> dp(n+1,-1);
        dp[0]=1;
        dp[1]=1;
        
        for(int i = 2;i<=n;i++){
            dp[i] = dp[i-1] + dp[i-2];
        }
        
        
        return dp[n];
    }
