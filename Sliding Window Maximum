class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        if (nums.empty() || k == 0) {
            return {};
        }
        if (k == 1) {
            return nums;
        }
        std::deque<int> deq;
        std::vector<int> result;
        for (int i = 0; i < nums.size(); ++i) {
            while (!deq.empty() && deq.front() < i - k + 1) {
                deq.pop_front();
            }
            while (!deq.empty() && nums[i] > nums[deq.back()]) {
                deq.pop_back();
            }   
            deq.push_back(i);
            if (i >= k - 1) {
                result.push_back(nums[deq.front()]);
            }
        }
        return result;
        
    }
};
