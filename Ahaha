from collections import defaultdict

def solve(N, M, enemy):
    # Create an adjacency list to represent the graph
    graph = defaultdict(list)
    for u, v in enemy:
        graph[u].append(v)
        graph[v].append(u)

    # Initialize two sets to represent the two groups
    group1 = set()
    group2 = set()

    # Function to perform a depth-first search to divide the students into groups
    def dfs(node, group):
        if node in group:
            return True
        for neighbor in graph[node]:
            if neighbor in group:
                return False
        group.add(node)
        for neighbor in graph[node]:
            if not dfs(neighbor, group):
                return False
        return True

    # Try to divide the students into two groups
    for student in range(1, N + 1):
        if student not in group1 and student not in group2:
            if not dfs(student, group1):
                dfs(student, group2)

    # Calculate the maximum size of the groups
    max_group_size = max(len(group1), len(group2))

    return max_group_size

# Input reading and function call
if __name__ == "__main__":
    N = int(input())
    M = int(input())
    enemy = []
    for _ in range(M):
        u, v = map(int, input().split())
        enemy.append((u, v))

    result = solve(N, M, enemy)
    print(result)

FROM ubuntu:jammy
 
LABEL version="1.0" \
      maintainer="sohwanpark <sohwan.park@lge.com>" \
      description="This image is used to run gst-validation for Gstreamer"
 
# Set default user and group IDs
ENV U_ID=1000 \
    G_ID=1000 \
    DOCKER_USER=si-mediaserver15
# please update si-mediaserver15 with username like whoami
# Set environment variables
ENV WORK_DIR=/home/si-mediaserver15 \
    DEBIAN_FRONTEND=noninteractive \
    LANG=en_US.UTF-8 \
    LC_ALL=en_US.UTF-8 \
    LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib:/usr/local/lib \
    LD_RUN_PATH=$LD_RUN_PATH:/usr/lib:/usr/local/lib
 
 
# Configure locale settings
#RUN echo "LC_ALL=ko_KR.UTF-8" >> /etc/environment && \
#    echo "LANG=ko_KR.UTF-8" >> /etc/environment
 
RUN echo "LC_ALL=en_US.UTF-8" >> /etc/environment && \
    echo "LANG=en_US.UTF-8" >> /etc/environment
 
# Update apt and install required packages
RUN apt-get update && \
    apt-get install -y sudo ca-certificates && \
    groupadd -g $G_ID $DOCKER_USER && \
    useradd -u $U_ID -g $G_ID -s /bin/bash -d /home/$DOCKER_USER -m $DOCKER_USER && \
    echo "$DOCKER_USER ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers
 
# Set up the user environment
RUN echo ". /etc/profile" >> /home/$DOCKER_USER/.bashrc && \
    echo ". ~/.bashrc" >> /home/$DOCKER_USER/.bash_profile && \
    chown $DOCKER_USER:$DOCKER_USER /home/$DOCKER_USER/.bashrc /home/$DOCKER_USER/.bash_profile && \
    chmod +x /home/$DOCKER_USER/.bash_profile
 
# Copy the install script into the container
COPY install-gst-dev.sh /tmp/install-gst-dev.sh
 
# Ensure the script has execute permissions and run it
RUN chmod +x /tmp/install-gst-dev.sh && \
    ls -l /tmp/install-gst-dev.sh && \
    /tmp/install-gst-dev.sh $DOCKER_USER && \
    rm -f /tmp/install-gst-dev.sh
 
# Clean up apt lists
RUN rm -rf /var/lib/apt/lists/* /tmp/*
 
# Set the working directory for future commands
WORKDIR $WORK_DIR
 
# Expose necessary ports
EXPOSE 80
EXPOSE 8000
EXPOSE 8080
EXPOSE 8090
EXPOSE 22




